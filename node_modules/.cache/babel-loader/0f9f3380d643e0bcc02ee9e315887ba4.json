{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Form/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport LocalStorage from '../../Services/LocalStorage';\nimport './Form.scss';\n\nconst Form = ({\n  title = \"subreddits\"\n}) => {\n  const [entries, setEntries] = useState(LocalStorage.get(title));\n  const [formData, setFormData] = useState(\"\");\n  useEffect(() => {\n    return () => {//clean up\n    };\n  }, []);\n\n  const handleChange = e => {\n    setFormData(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    console.log(formData);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit(formData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Subreddit name: \", React.createElement(\"input\", {\n    placeholder: \"ProgrammerHumor, memes, EarthPorn\",\n    name: \"sub\",\n    type: \"text\",\n    value: formData,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), entries && entries.length > 0 && React.createElement(\"ul\", {\n    className: \"entires\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, entries.map((entry, index) => {\n    React.createElement(\"li\", {\n      key: index,\n      className: \"entry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, entry);\n  })));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Form/index.js"],"names":["React","useState","useEffect","LocalStorage","Form","title","entries","setEntries","get","formData","setFormData","handleChange","e","target","value","handleSubmit","console","log","preventDefault","length","map","entry","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAK,GAAG;AAAT,CAAD,KAA4B;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACE,YAAY,CAACK,GAAb,CAAiBH,KAAjB,CAAD,CAAtC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM,CACT;AACH,KAFD;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAGG,CAAD,IAAO;AAACA,MAAAA,CAAC,CAACM,cAAF;AAAoBH,MAAAA,YAAY,CAACN,QAAD,CAAZ;AAAuB,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuB;AAAO,IAAA,WAAW,EAAC,mCAAnB;AAAuD,IAAA,IAAI,EAAC,KAA5D;AAAkE,IAAA,IAAI,EAAC,MAAvE;AAA8E,IAAA,KAAK,EAAEA,QAArF;AAA+F,IAAA,QAAQ,EAAEE,YAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CADJ,CADJ,EAIKL,OAAO,IAAIA,OAAO,CAACa,MAAR,GAAe,CAA1B,IAA+B;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3Bb,OAAO,CAACc,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,SAAS,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCD,KAAnC;AACH,GAFA,CAD2B,CAJpC,CADJ;AAYH,CA9BD;;AAgCA,eAAejB,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport LocalStorage from '../../Services/LocalStorage'\nimport './Form.scss'\n\nconst Form = ({title = \"subreddits\"}) => {\n    const [entries, setEntries] = useState(LocalStorage.get(title))\n    const [formData, setFormData] = useState(\"\")\n\n    useEffect(() => {\n        return () => {\n            //clean up\n        }\n    },[])\n\n    const handleChange = (e) => {\n        setFormData(e.target.value)\n    }\n\n    const handleSubmit = () => {\n        console.log(formData)\n    }\n\n    return(\n        <div className=\"form--container\">\n            <form onSubmit={(e) => {e.preventDefault(); handleSubmit(formData)}}>\n                <label>Subreddit name: <input placeholder=\"ProgrammerHumor, memes, EarthPorn\" name=\"sub\" type=\"text\" value={formData} onChange={handleChange}/></label>\n            </form>\n            {entries && entries.length>0 && <ul className=\"entires\">\n                {entries.map((entry, index) => {\n                    <li key={index} className=\"entry\">{entry}</li>\n                })}\n            </ul>}\n        </div>\n    )\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}