{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Feed/FeedController.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Feed from \"./index\";\nimport redditFetch from \"../../Services/redditFetch\";\nimport instagramFetch from \"../../Services/instagramFetch\";\nimport defaultInstagram from \"../../assets/defaultInstagram\";\nimport defaultSubreddits from \"../../assets/defaultSubreddits\";\n\nconst FeedController = () => {\n  //keep track of all posts we want to show to the user eventually\n  const [posts, setPosts] = useState([]); //on mount, load urls of images\n\n  useEffect(() => {\n    const addPosts = newPosts => {\n      setPosts(prevPosts => {\n        const posts = [...prevPosts, ...newPosts];\n        shuffleArray(posts);\n        return posts;\n      });\n    };\n\n    const loadReddit = async subreddits => {\n      const redditPosts = await redditFetch(subreddits);\n      addPosts(redditPosts);\n    };\n\n    const loadInstagram = async ({\n      terms,\n      accounts\n    }) => {\n      const instaPosts = await instagramFetch(terms, accounts);\n      addPosts(instaPosts);\n    };\n\n    loadInstagram(defaultInstagram);\n    loadReddit(defaultSubreddits);\n  }, []);\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const getPosts = n => {\n    const toReturn = posts.slice(0, n);\n    setPosts(prevPosts => {\n      prevPosts.splice(0, n);\n      return prevPosts;\n    });\n    return toReturn;\n  };\n\n  return React.createElement(Feed, {\n    getPosts: getPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  });\n};\n\nexport default FeedController;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Feed/FeedController.js"],"names":["React","useState","useEffect","Feed","redditFetch","instagramFetch","defaultInstagram","defaultSubreddits","FeedController","posts","setPosts","addPosts","newPosts","prevPosts","shuffleArray","loadReddit","subreddits","redditPosts","loadInstagram","terms","accounts","instaPosts","array","i","length","j","Math","floor","random","temp","getPosts","n","toReturn","slice","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAC3B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAF2B,CAI3B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,MAAAA,QAAQ,CAACG,SAAS,IAAI;AACpB,cAAMJ,KAAK,GAAG,CAAC,GAAGI,SAAJ,EAAe,GAAGD,QAAlB,CAAd;AACAE,QAAAA,YAAY,CAACL,KAAD,CAAZ;AACA,eAAOA,KAAP;AACD,OAJO,CAAR;AAKD,KAND;;AAQA,UAAMM,UAAU,GAAG,MAAOC,UAAP,IAAsB;AACvC,YAAMC,WAAW,GAAG,MAAMb,WAAW,CAACY,UAAD,CAArC;AACAL,MAAAA,QAAQ,CAACM,WAAD,CAAR;AACD,KAHD;;AAKA,UAAMC,aAAa,GAAG,OAAO;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAP,KAA6B;AACjD,YAAMC,UAAU,GAAG,MAAMhB,cAAc,CAACc,KAAD,EAAOC,QAAP,CAAvC;AACAT,MAAAA,QAAQ,CAACU,UAAD,CAAR;AACD,KAHD;;AAKAH,IAAAA,aAAa,CAACZ,gBAAD,CAAb;AACAS,IAAAA,UAAU,CAACR,iBAAD,CAAV;AACD,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,QAAMO,YAAY,GAAGQ,KAAK,IAAI;AAC5B,SAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,UAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,UAAIM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAhB;AACAD,MAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,MAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACD;AACF,GAPD;;AASA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,UAAMC,QAAQ,GAAGvB,KAAK,CAACwB,KAAN,CAAY,CAAZ,EAAeF,CAAf,CAAjB;AACArB,IAAAA,QAAQ,CAACG,SAAS,IAAI;AACpBA,MAAAA,SAAS,CAACqB,MAAV,CAAiB,CAAjB,EAAoBH,CAApB;AACA,aAAOlB,SAAP;AACD,KAHO,CAAR;AAIA,WAAOmB,QAAP;AACD,GAPD;;AASA,SAAO,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA/CD;;AAiDA,eAAetB,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Feed from \"./index\";\nimport redditFetch from \"../../Services/redditFetch\"\nimport instagramFetch from \"../../Services/instagramFetch\"\nimport defaultInstagram from \"../../assets/defaultInstagram\"\nimport defaultSubreddits from \"../../assets/defaultSubreddits\"\n\n\nconst FeedController = () => {\n  //keep track of all posts we want to show to the user eventually\n  const [posts, setPosts] = useState([]);\n\n  //on mount, load urls of images\n  useEffect(() => {\n    const addPosts = newPosts => {\n      setPosts(prevPosts => {\n        const posts = [...prevPosts, ...newPosts];\n        shuffleArray(posts);\n        return posts;\n      });\n    };\n\n    const loadReddit = async (subreddits) => {\n      const redditPosts = await redditFetch(subreddits)\n      addPosts(redditPosts)\n    }\n\n    const loadInstagram = async ({terms, accounts}) => {\n      const instaPosts = await instagramFetch(terms,accounts)\n      addPosts(instaPosts)\n    }\n\n    loadInstagram(defaultInstagram)\n    loadReddit(defaultSubreddits)\n  }, []);\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const getPosts = n => {\n    const toReturn = posts.slice(0, n);\n    setPosts(prevPosts => {\n      prevPosts.splice(0, n);\n      return prevPosts;\n    });\n    return toReturn;\n  };\n\n  return <Feed getPosts={getPosts} />;\n};\n\nexport default FeedController;\n"]},"metadata":{},"sourceType":"module"}