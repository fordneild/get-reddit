{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Feed/FeedController.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Feed from \"./index\";\nimport fetchData from \"../../Services/useFetch\";\n\nconst FeedController = () => {\n  //keep track of all posts we want to show to the user\n  const [posts, setPosts] = useState([]);\n\n  const addPosts = newPosts => {\n    setPosts(prevPosts => [...prevPosts, ...newPosts]);\n  }; //on load, set posts\n\n\n  useEffect(() => {\n    const defaultSubs = [\"memes\", \"funny\", \"AdviceAnimals\", \"MemeEconomy\", \"ComedyCemetery\", \"dankmemes\", \"ProgrammerHumor\", \"ImGoingToHellForThis\"];\n    const defaultInstgramSearches = [\"memes\"];\n\n    const loadSubredditPosts = async subs => {\n      const redditPosts = await Promise.all(subs.map(async sub => {\n        return await fetchSubPosts(sub);\n      }));\n      const flatPosts = [].concat(...redditPosts);\n      shuffleArray(flatPosts);\n      addPosts(flatPosts);\n    };\n\n    const loadInstagramMemes = async terms => {\n      const instas = await Promise.all(terms.map(async term => {\n        const post = await fetchInstagramPosts(term);\n        return {\n          content: post,\n          term: term\n        };\n      }));\n      console.log(instas);\n      let cleanedInstas = [].concat(...instas).map(post => {\n        console.log(post);\n        return {\n          title: null,\n          url: post.content.display_url,\n          pipe: post.term\n        };\n      });\n      shuffleArray(cleanedInstas);\n      console.log(cleanedInstas);\n      addPosts(cleanedInstas);\n    };\n\n    loadInstagramMemes(defaultInstgramSearches); //loadSubredditPosts(defaultSubs)\n  }, []);\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const fetchInstagramPosts = async term => {\n    const page = await fetchData(`https://www.instagram.com/explore/tags/${term}/?__a=1`);\n\n    try {\n      return page.graphql.hashtag.edge_hashtag_to_media.edges.filter(post => post.node.__typename === \"GraphImage\").map(post => post.node);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const fetchSubPosts = async subName => {\n    const sub = await fetchData(`https://www.reddit.com/r/${subName}/.json?`);\n    return sub.data.children.map(child => child.data).filter(post => {\n      return post && post.url && post.post_hint === \"image\";\n    });\n  };\n\n  const getPosts = n => {\n    const toReturn = posts.slice(0, n);\n    setPosts(prevPosts => {\n      prevPosts.splice(0, n);\n      return prevPosts;\n    });\n    return toReturn;\n  };\n\n  return React.createElement(Feed, {\n    getPosts: getPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  });\n};\n\nexport default FeedController;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Feed/FeedController.js"],"names":["React","useState","useEffect","Feed","fetchData","FeedController","posts","setPosts","addPosts","newPosts","prevPosts","defaultSubs","defaultInstgramSearches","loadSubredditPosts","subs","redditPosts","Promise","all","map","sub","fetchSubPosts","flatPosts","concat","shuffleArray","loadInstagramMemes","terms","instas","term","post","fetchInstagramPosts","content","console","log","cleanedInstas","title","url","display_url","pipe","array","i","length","j","Math","floor","random","temp","page","graphql","hashtag","edge_hashtag_to_media","edges","filter","node","__typename","e","subName","data","children","child","post_hint","getPosts","n","toReturn","slice","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Feed from \"./index\";\nimport fetchData from \"../../Services/useFetch\";\n\nconst FeedController = () => {\n  //keep track of all posts we want to show to the user\n  const [posts, setPosts] = useState([]);\n\n  const addPosts = newPosts => {\n    setPosts(prevPosts => [...prevPosts, ...newPosts]);\n  };\n\n  //on load, set posts\n  useEffect(() => {\n    const defaultSubs = [\n      \"memes\",\n      \"funny\",\n      \"AdviceAnimals\",\n      \"MemeEconomy\",\n      \"ComedyCemetery\",\n      \"dankmemes\",\n      \"ProgrammerHumor\",\n      \"ImGoingToHellForThis\"\n    ];\n    const defaultInstgramSearches = [\"memes\"];\n    const loadSubredditPosts = async subs => {\n      const redditPosts = await Promise.all(\n        subs.map(async sub => {\n          return await fetchSubPosts(sub);\n        })\n      );\n      const flatPosts = [].concat(...redditPosts);\n      shuffleArray(flatPosts);\n      addPosts(flatPosts);\n    };\n    const loadInstagramMemes = async terms => {\n      const instas = await Promise.all(\n        terms.map(async term => {\n          const post = await fetchInstagramPosts(term);\n          return {\n            content: post,\n            term: term\n          }\n        })\n      );\n      console.log(instas)\n      let cleanedInstas = [].concat(...instas).map(post => {\n        console.log(post)\n        return {\n          title: null,\n          url: post.content.display_url,\n          pipe: post.term\n        };\n      });\n      shuffleArray(cleanedInstas);\n      console.log(cleanedInstas)\n      addPosts(cleanedInstas);\n    };\n\n    loadInstagramMemes(defaultInstgramSearches);\n    //loadSubredditPosts(defaultSubs)\n  }, []);\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const fetchInstagramPosts = async term => {\n    const page = await fetchData(\n      `https://www.instagram.com/explore/tags/${term}/?__a=1`\n    );\n    try {\n      return page.graphql.hashtag.edge_hashtag_to_media.edges.filter(\n          post => post.node.__typename===\"GraphImage\"\n      )\n      .map(\n        post => post.node\n      );\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const fetchSubPosts = async subName => {\n    const sub = await fetchData(`https://www.reddit.com/r/${subName}/.json?`);\n    return sub.data.children\n      .map(child => child.data)\n      .filter(post => {\n        return post && post.url && post.post_hint === \"image\";\n      });\n  };\n\n  const getPosts = n => {\n    const toReturn = posts.slice(0, n);\n    setPosts(prevPosts => {\n      prevPosts.splice(0, n);\n      return prevPosts;\n    });\n    return toReturn;\n  };\n\n  return <Feed getPosts={getPosts} />;\n};\n\nexport default FeedController;\n"]},"metadata":{},"sourceType":"module"}