{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Form/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport LocalStorage from \"../../Services/LocalStorage\";\nimport \"./Form.scss\";\n\nconst Form = ({\n  LSKey,\n  title,\n  defaults,\n  addPosts,\n  fetch,\n  removePostByPipe,\n  prefix\n}) => {\n  //list entries\n  const [entries, setEntires] = useState({}); //text in input\n\n  const [formData, setFormData] = useState(\"\"); //load entries from local storage on mount\n\n  useEffect(() => {\n    const loadEntires = async () => {\n      const LSEntries = await LocalStorage.get(LSKey);\n\n      if (LSEntries !== null) {\n        //entires were in local\n        setEntires(LSEntries);\n      } else {\n        //use defaults\n        setEntires(defaults); //set entires in local\n\n        LocalStorage.set(LSKey, defaults);\n      }\n    };\n\n    loadEntires();\n  }, [LSKey, defaults]);\n\n  const refresh = async () => {\n    const LSEntries = await LocalStorage.get(LSKey);\n    setEntires(LSEntries);\n  };\n\n  const handleChange = e => {\n    setFormData(e.target.value);\n  };\n\n  const appendEntry = async entry => {\n    await LocalStorage.set(LSKey, [entry, ...entries]);\n    refresh();\n    const newPosts = await fetch(entry);\n    addPosts(newPosts);\n  };\n\n  const removeEntry = async entryToRemove => {\n    await LocalStorage.set(LSKey, entries.slice(0).filter(entry => entry !== entryToRemove));\n    refresh();\n    removePostByPipe(`${prefix}${entryToRemove}`);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    appendEntry(formData);\n    setFormData(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, LSKey, \" name:\", \" \", React.createElement(\"input\", {\n    placeholder: \"ProgrammerHumor, memes, EarthPorn\",\n    name: \"sub\",\n    type: \"text\",\n    value: formData,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), entries && entries.length > 0 && React.createElement(\"ul\", {\n    className: \"entires\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, entries.map((entry, index) => {\n    return React.createElement(\"li\", {\n      key: index,\n      className: \"entry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, entry), React.createElement(\"div\", {\n      className: \"close\",\n      onClick: () => {\n        removeEntry(entry);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  })));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Form/index.js"],"names":["React","useState","useEffect","LocalStorage","Form","LSKey","title","defaults","addPosts","fetch","removePostByPipe","prefix","entries","setEntires","formData","setFormData","loadEntires","LSEntries","get","set","refresh","handleChange","e","target","value","appendEntry","entry","newPosts","removeEntry","entryToRemove","slice","filter","handleSubmit","preventDefault","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LocalStorage from \"../../Services/LocalStorage\";\nimport \"./Form.scss\";\n\nconst Form = ({\n  LSKey,\n  title,\n  defaults,\n  addPosts,\n  fetch,\n  removePostByPipe,\n  prefix\n}) => {\n  //list entries\n  const [entries, setEntires] = useState({});\n  //text in input\n  const [formData, setFormData] = useState(\"\");\n\n  //load entries from local storage on mount\n  useEffect(() => {\n    const loadEntires = async () => {\n      const LSEntries = await LocalStorage.get(LSKey);\n      if (LSEntries !== null) {\n        //entires were in local\n        setEntires(LSEntries);\n      } else {\n        //use defaults\n        setEntires(defaults);\n        //set entires in local\n        LocalStorage.set(LSKey, defaults);\n      }\n    };\n    loadEntires();\n  }, [LSKey, defaults]);\n\n  const refresh = async () => {\n    const LSEntries = await LocalStorage.get(LSKey);\n    setEntires(LSEntries);\n  };\n\n  const handleChange = e => {\n    setFormData(e.target.value);\n  };\n\n  const appendEntry = async entry => {\n    await LocalStorage.set(LSKey, [entry, ...entries]);\n    refresh();\n    const newPosts = await fetch(entry);\n    addPosts(newPosts);\n  };\n\n  const removeEntry = async entryToRemove => {\n    await LocalStorage.set(\n      LSKey,\n      entries.slice(0).filter(entry => entry !== entryToRemove)\n    );\n    refresh();\n    removePostByPipe(`${prefix}${entryToRemove}`);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    appendEntry(formData);\n    setFormData(\"\");\n  };\n\n  return (\n    <div className=\"form--container\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          {LSKey} name:{\" \"}\n          <input\n            placeholder=\"ProgrammerHumor, memes, EarthPorn\"\n            name=\"sub\"\n            type=\"text\"\n            value={formData}\n            onChange={handleChange}\n          />\n        </label>\n      </form>\n      {entries && entries.length > 0 && (\n        <ul className=\"entires\">\n          {entries.map((entry, index) => {\n            return (\n              <li key={index} className=\"entry\">\n                <p>{entry}</p>\n                <div\n                  className=\"close\"\n                  onClick={() => {\n                    removeEntry(entry);\n                  }}\n                ></div>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}