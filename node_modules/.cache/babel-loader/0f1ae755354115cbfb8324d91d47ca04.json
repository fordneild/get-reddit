{"ast":null,"code":"import fetchData from './useFetch';\nimport defaultInstagram from \"../assets/defaultInstagram\";\nconst {\n  terms,\n  accounts\n} = defaultInstagram;\n\nconst fetchInstagramAccountPosts = async (account, num) => {\n  const page = await fetchData(`https://www.instagram.com/${account}/?__a=1`);\n\n  try {\n    let posts = page.graphql.user.edge_owner_to_timeline_media.edges.filter(post => post.node.__typename === \"GraphImage\").map(post => {\n      post.node.pipe = `@${account}`;\n      return post.node;\n    });\n    return posts;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst fetchInstagramHashTagPosts = async term => {\n  const page = await fetchData(`https://www.instagram.com/explore/tags/${term}/?__a=1`);\n\n  try {\n    return page.graphql.hashtag.edge_hashtag_to_media.edges.filter(post => post.node.__typename === \"GraphImage\").map(post => {\n      post.node.pipe = `#${term}`;\n      return post.node;\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst loadInstagramMemes = async (terms, accounts) => {\n  const instas = await Promise.all([...terms.map(async term => {\n    return await fetchInstagramHashTagPosts(term);\n  }), ...accounts.map(async account => {\n    return await fetchInstagramAccountPosts(account);\n  })]);\n  let cleanedInstas = [].concat(...instas).map(post => {\n    return {\n      title: null,\n      url: post.display_url,\n      pipe: post.pipe\n    };\n  });\n  return cleanedInstas;\n};\n\nexport default loadInstagramMemes;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Services/instagramFetch.js"],"names":["fetchData","defaultInstagram","terms","accounts","fetchInstagramAccountPosts","account","num","page","posts","graphql","user","edge_owner_to_timeline_media","edges","filter","post","node","__typename","map","pipe","e","console","log","fetchInstagramHashTagPosts","term","hashtag","edge_hashtag_to_media","loadInstagramMemes","instas","Promise","all","cleanedInstas","concat","title","url","display_url"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,MAAM;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,IAAoBF,gBAA1B;;AACA,MAAMG,0BAA0B,GAAG,OAAOC,OAAP,EAAgBC,GAAhB,KAAwB;AACvD,QAAMC,IAAI,GAAG,MAAMP,SAAS,CAAE,6BAA4BK,OAAQ,SAAtC,CAA5B;;AACA,MAAI;AACF,QAAIG,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAaC,IAAb,CAAkBC,4BAAlB,CAA+CC,KAA/C,CACTC,MADS,CACFC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,UAAV,KAAyB,YAD/B,EAETC,GAFS,CAELH,IAAI,IAAI;AACXA,MAAAA,IAAI,CAACC,IAAL,CAAUG,IAAV,GAAkB,IAAGb,OAAQ,EAA7B;AACA,aAAOS,IAAI,CAACC,IAAZ;AACD,KALS,CAAZ;AAMA,WAAOP,KAAP;AACD,GARD,CAQE,OAAOW,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAbH;;AAeA,MAAMG,0BAA0B,GAAG,MAAMC,IAAN,IAAc;AAC7C,QAAMhB,IAAI,GAAG,MAAMP,SAAS,CACzB,0CAAyCuB,IAAK,SADrB,CAA5B;;AAGA,MAAI;AACF,WAAOhB,IAAI,CAACE,OAAL,CAAae,OAAb,CAAqBC,qBAArB,CAA2Cb,KAA3C,CACJC,MADI,CACGC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,UAAV,KAAyB,YADpC,EAEJC,GAFI,CAEAH,IAAI,IAAI;AACXA,MAAAA,IAAI,CAACC,IAAL,CAAUG,IAAV,GAAkB,IAAGK,IAAK,EAA1B;AACA,aAAOT,IAAI,CAACC,IAAZ;AACD,KALI,CAAP;AAMD,GAPD,CAOE,OAAOI,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAdH;;AAgBA,MAAMO,kBAAkB,GAAG,OAAOxB,KAAP,EAAcC,QAAd,KAA2B;AAClD,QAAMwB,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAR,CACnB,CAAC,GAAG3B,KAAK,CAACe,GAAN,CAAU,MAAMM,IAAN,IAAc;AAC1B,WAAO,MAAMD,0BAA0B,CAACC,IAAD,CAAvC;AACD,GAFG,CAAJ,EAEG,GAAGpB,QAAQ,CAACc,GAAT,CAAa,MAAMZ,OAAN,IAAiB;AAClC,WAAO,MAAMD,0BAA0B,CAACC,OAAD,CAAvC;AACD,GAFK,CAFN,CADmB,CAArB;AAOA,MAAIyB,aAAa,GAAG,GAAGC,MAAH,CAAU,GAAGJ,MAAb,EAAqBV,GAArB,CAAyBH,IAAI,IAAI;AACnD,WAAO;AACLkB,MAAAA,KAAK,EAAE,IADF;AAELC,MAAAA,GAAG,EAAEnB,IAAI,CAACoB,WAFL;AAGLhB,MAAAA,IAAI,EAAEJ,IAAI,CAACI;AAHN,KAAP;AAKD,GANmB,CAApB;AAOA,SAAOY,aAAP;AACD,CAhBH;;AAkBE,eAAeJ,kBAAf","sourcesContent":["import fetchData from './useFetch'\nimport defaultInstagram from \"../assets/defaultInstagram\"\nconst {terms, accounts} = defaultInstagram\nconst fetchInstagramAccountPosts = async (account, num) => {\n    const page = await fetchData(`https://www.instagram.com/${account}/?__a=1`);\n    try {\n      let posts = page.graphql.user.edge_owner_to_timeline_media.edges\n        .filter(post => post.node.__typename === \"GraphImage\")\n        .map(post => {\n          post.node.pipe = `@${account}`;\n          return post.node;\n        });\n      return posts;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\nconst fetchInstagramHashTagPosts = async term => {\n    const page = await fetchData(\n      `https://www.instagram.com/explore/tags/${term}/?__a=1`\n    );\n    try {\n      return page.graphql.hashtag.edge_hashtag_to_media.edges\n        .filter(post => post.node.__typename === \"GraphImage\")\n        .map(post => {\n          post.node.pipe = `#${term}`;\n          return post.node;\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\nconst loadInstagramMemes = async (terms, accounts) => {\n    const instas = await Promise.all(\n      [...terms.map(async term => {\n        return await fetchInstagramHashTagPosts(term);\n      }),...accounts.map(async account => {\n        return await fetchInstagramAccountPosts(account);\n      })]\n    );\n    let cleanedInstas = [].concat(...instas).map(post => {\n      return {\n        title: null,\n        url: post.display_url,\n        pipe: post.pipe\n      };\n    });\n    return cleanedInstas\n  };\n\n  export default loadInstagramMemes"]},"metadata":{},"sourceType":"module"}