{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Landing/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport fetchData from \"../../Services/useFetch\";\nimport \"./Landing.scss\";\n\nconst Landing = () => {\n  const [posts, setPosts] = useState(false);\n\n  const fetchSub = async subName => {\n    const sub = await fetchData(`https://www.reddit.com/r/${subName}/.json?`);\n    setPosts(sub.data.children);\n  };\n\n  useEffect(() => {\n    fetchSub(\"EarthPorn\");\n  }, []);\n\n  const handleError = e => {\n    console.log(e);\n  };\n\n  const renderPosts = () => {\n    if (posts) {\n      return posts.filter((post, index) => {\n        return post && post.data && post.data.url && post.data.post_hint === \"image\";\n      }).map((post, index) => {\n        console.log(post);\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: post.data.url,\n          onError: e => {\n            e.target.onerror = null;\n            console.log(e.target);\n            e.target.parentNode.removeChild(e.target);\n            e.target.style.display = 'none';\n            e.target.style.margin = '0px';\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, renderPosts());\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Landing/index.js"],"names":["React","useEffect","useState","fetchData","Landing","posts","setPosts","fetchSub","subName","sub","data","children","handleError","e","console","log","renderPosts","filter","post","index","url","post_hint","map","target","onerror","parentNode","removeChild","style","display","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMK,QAAQ,GAAG,MAAMC,OAAN,IAAiB;AAChC,UAAMC,GAAG,GAAG,MAAMN,SAAS,CAAE,4BAA2BK,OAAQ,SAArC,CAA3B;AACAF,IAAAA,QAAQ,CAACG,GAAG,CAACC,IAAJ,CAASC,QAAV,CAAR;AACD,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,WAAW,GAAGC,CAAC,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxB,QAAIX,KAAJ,EAAW;AACT,aAAOA,KAAK,CACTY,MADI,CACG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,eAAOD,IAAI,IAAIA,IAAI,CAACR,IAAb,IAAqBQ,IAAI,CAACR,IAAL,CAAUU,GAA/B,IAAsCF,IAAI,CAACR,IAAL,CAAUW,SAAV,KAAsB,OAAnE;AACD,OAHI,EAIJC,GAJI,CAIA,CAACJ,IAAD,EAAOC,KAAP,KAAiB;AACpBL,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,eACE;AAAK,UAAA,GAAG,EAAEC,KAAV;AAAiB,UAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAED,IAAI,CAACR,IAAL,CAAUU,GAApB;AAAyB,UAAA,OAAO,EAAGP,CAAD,IAAK;AAACA,YAAAA,CAAC,CAACU,MAAF,CAASC,OAAT,GAAmB,IAAnB;AAAyBV,YAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACU,MAAd;AAAuBV,YAAAA,CAAC,CAACU,MAAF,CAASE,UAAT,CAAoBC,WAApB,CAAgCb,CAAC,CAACU,MAAlC;AAA2CV,YAAAA,CAAC,CAACU,MAAF,CAASI,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AAAgCf,YAAAA,CAAC,CAACU,MAAF,CAASI,KAAT,CAAeE,MAAf,GAAwB,KAAxB;AAA8B,WAAjM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAXI,CAAP;AAYD;AACF,GAfD;;AAiBA,SAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBb,WAAW,EAAnC,CAAP;AACD,CAlCD;;AAoCA,eAAeZ,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport fetchData from \"../../Services/useFetch\";\nimport \"./Landing.scss\";\n\nconst Landing = () => {\n  const [posts, setPosts] = useState(false);\n\n  const fetchSub = async subName => {\n    const sub = await fetchData(`https://www.reddit.com/r/${subName}/.json?`);\n    setPosts(sub.data.children);\n  };\n\n  useEffect(() => {\n    fetchSub(\"EarthPorn\");\n  }, []);\n\n  const handleError = e => {\n    console.log(e);\n  };\n\n  const renderPosts = () => {\n    if (posts) {\n      return posts\n        .filter((post, index) => {\n          return post && post.data && post.data.url && post.data.post_hint===\"image\"\n        })\n        .map((post, index) => {\n          console.log(post);\n          return (\n            <div key={index} className=\"post\">\n              <img src={post.data.url} onError={(e)=>{e.target.onerror = null; console.log(e.target); e.target.parentNode.removeChild(e.target); e.target.style.display = 'none';e.target.style.margin = '0px'}}/>\n            </div>\n          );\n        });\n    }\n  };\n\n  return <div className=\"posts\">{renderPosts()}</div>;\n};\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}