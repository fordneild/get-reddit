{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Settings/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Settings.scss\";\nimport defaultSubreddits from \"../../assets/defaultSubreddits\";\nimport defaultInstagram from \"../../assets/defaultInstagram\";\nimport LocalStorage from \"../../Services/LocalStorage.js\";\nimport Form from \"../Form/index\";\n\nconst Settings = ({\n  show = false\n}) => {\n  const [subs, setSubs] = useState([]);\n  const [instaTags, setInstaTags] = useState([]);\n  const [instaAccounts, setInstaAccounts] = useState([]);\n  useEffect(() => {\n    const loadSettings = async () => {\n      const {\n        terms,\n        accounts\n      } = defaultInstagram;\n\n      const checkSetFlag = async () => {\n        const setFlag = await LocalStorage.get(\"setFlag\");\n\n        if (!setFlag) {\n          const initLS = async () => {\n            console.log(\"initalizing LS\");\n            await Promise.all([LocalStorage.set(\"reddit\", defaultSubreddits), LocalStorage.set(\"instaTags\", terms), LocalStorage.set(\"instaAccounts\", accounts)]);\n            LocalStorage.set(\"setFlag\", true);\n          };\n\n          initLS();\n        }\n      };\n\n      const initState = async () => {\n        //blocking is a bad idea but these are so small so i think its ok for now\n        const subreddits = await LocalStorage.get(\"reddit\");\n        setSubs(subreddits);\n        await LocalStorage.get(\"instaTags\", terms);\n        const instagramTags = await LocalStorage.get(\"instaTags\");\n        setInstaTags(instagramTags);\n        await LocalStorage.get(\"instaAccounts\", accounts);\n        const instagramAccounts = await LocalStorage.get(\"instaAccounts\");\n        setInstaAccounts(instagramAccounts);\n      }; //if the user doesnt have local storage going yet, then we intialize it\n\n\n      await checkSetFlag();\n      initState();\n      setSubs();\n    };\n\n    loadSettings();\n  }, []);\n\n  const refresh = async key => {\n    const setters = {\n      reddit: setSubs,\n      instaTags: setInstaTags,\n      instaAccounds: setInstaAccounts\n    };\n    const data = await LocalStorage.get(key);\n    setters[key](data);\n  };\n\n  return React.createElement(\"div\", {\n    className: `settings--container ${show ? \"\" : \"hide\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form, {\n    refresh: refresh,\n    LSKey: \"reddit\",\n    title: \"subreddits\",\n    entries: subs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Form, {\n    LSKey: \"instaAccounts\",\n    title: \"accounts\",\n    entries: instaTags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Form, {\n    LSKey: \"instaTags\",\n    title: \"hashtags\",\n    entries: instaAccounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Settings/index.js"],"names":["React","useEffect","useState","defaultSubreddits","defaultInstagram","LocalStorage","Form","Settings","show","subs","setSubs","instaTags","setInstaTags","instaAccounts","setInstaAccounts","loadSettings","terms","accounts","checkSetFlag","setFlag","get","initLS","console","log","Promise","all","set","initState","subreddits","instagramTags","instagramAccounts","refresh","key","setters","reddit","instaAccounds","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Settings.scss\";\nimport defaultSubreddits from \"../../assets/defaultSubreddits\";\nimport defaultInstagram from \"../../assets/defaultInstagram\";\n\nimport LocalStorage from \"../../Services/LocalStorage.js\";\nimport Form from \"../Form/index\";\n\nconst Settings = ({ show = false }) => {\n  const [subs, setSubs] = useState([]);\n  const [instaTags, setInstaTags] = useState([]);\n  const [instaAccounts, setInstaAccounts] = useState([]);\n\n  \n\n  useEffect(() => {\n    const loadSettings = async () => {\n      const { terms, accounts } = defaultInstagram;\n      const checkSetFlag = async () => {\n        const setFlag = await LocalStorage.get(\"setFlag\");\n        if (!setFlag) {\n          const initLS = async () => {\n            console.log(\"initalizing LS\");\n            await Promise.all([\n              LocalStorage.set(\"reddit\", defaultSubreddits),\n              LocalStorage.set(\"instaTags\", terms),\n              LocalStorage.set(\"instaAccounts\", accounts)\n            ]);\n\n            LocalStorage.set(\"setFlag\", true);\n          };\n          initLS();\n        }\n      };\n      const initState = async () => {\n        //blocking is a bad idea but these are so small so i think its ok for now\n        const subreddits = await LocalStorage.get(\"reddit\");\n        setSubs(subreddits);\n        await LocalStorage.get(\"instaTags\", terms);\n        const instagramTags = await LocalStorage.get(\"instaTags\");\n        setInstaTags(instagramTags);\n        await LocalStorage.get(\"instaAccounts\", accounts);\n        const instagramAccounts = await LocalStorage.get(\"instaAccounts\");\n        setInstaAccounts(instagramAccounts);\n      };\n      //if the user doesnt have local storage going yet, then we intialize it\n      await checkSetFlag();\n      initState();\n\n      setSubs();\n    };\n    loadSettings();\n  }, []);\n\n  const refresh = async (key) => {\n    const setters = {\n      reddit: setSubs,\n      instaTags: setInstaTags,\n      instaAccounds: setInstaAccounts  \n    }\n    const data = await LocalStorage.get(key);\n    setters[key](data)\n  }\n\n  return (\n    <div className={`settings--container ${show ? \"\" : \"hide\"}`}>\n      <Form refresh={refresh} LSKey={\"reddit\"} title={\"subreddits\"} entries={subs}/>\n      <Form LSKey={\"instaAccounts\"} title={\"accounts\"} entries={instaTags}/>\n      <Form LSKey={\"instaTags\"} title={\"hashtags\"} entries={instaAccounts}/>\n    </div>\n  );\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}