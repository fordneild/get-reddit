{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Feed/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { debounce } from \"lodash\";\nimport \"./Feed.scss\";\nimport RedditPost from '../RedditPost/index';\n\nconst Feed = ({\n  getPosts = () => {}\n}) => {\n  const [posts, setPosts] = useState([]);\n  const handleScroll = debounce(() => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100) {\n      loadPosts(10);\n    }\n  }, 100); //EVENT LISTENERS\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll]); //INTIAL POST LOADING\n\n  useEffect(() => {\n    const loadInitialPosts = async () => {\n      const newPosts = await getPosts(10);\n      setPosts(newPosts);\n    };\n\n    loadInitialPosts(10);\n  }, [getPosts]);\n\n  const loadPosts = async n => {\n    const newPosts = await getPosts(n);\n    setPosts([...posts, ...newPosts]);\n  };\n\n  const renderPosts = () => {\n    if (posts) {\n      return posts.filter((post, index) => {\n        return post && post.url && post.post_hint === \"image\";\n      }).map((post, index) => {\n        return React.createElement(RedditPost, {\n          src: post.src,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, renderPosts());\n};\n\nexport default Feed;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Feed/index.js"],"names":["React","useEffect","useState","debounce","RedditPost","Feed","getPosts","posts","setPosts","handleScroll","window","innerHeight","scrollY","document","body","offsetHeight","loadPosts","addEventListener","removeEventListener","loadInitialPosts","newPosts","n","renderPosts","filter","post","index","url","post_hint","map","src"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAQ,GAAG,MAAM,CAAE;AAArB,CAAD,KAA6B;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,YAAY,GAAGN,QAAQ,CAAC,MAAM;AAClC,QACEO,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACE,OAA5B,IACAC,QAAQ,CAACC,IAAT,CAAcC,YAAd,GAA6B,GAF/B,EAGE;AACAC,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD;AACF,GAP4B,EAO1B,GAP0B,CAA7B,CAFwC,CAWxC;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCR,YAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCT,YAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACA,YAAD,CALM,CAAT,CAZwC,CAmBxC;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,gBAAgB,GAAG,YAAY;AACnC,YAAMC,QAAQ,GAAG,MAAMd,QAAQ,CAAC,EAAD,CAA/B;AACAE,MAAAA,QAAQ,CAACY,QAAD,CAAR;AACD,KAHD;;AAKAD,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAPQ,EAON,CAACb,QAAD,CAPM,CAAT;;AAUA,QAAMU,SAAS,GAAG,MAAOK,CAAP,IAAa;AAC7B,UAAMD,QAAQ,GAAG,MAAMd,QAAQ,CAACe,CAAD,CAA/B;AACAb,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGa,QAAd,CAAD,CAAR;AACD,GAHD;;AAKA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAIf,KAAJ,EAAW;AACT,aAAOA,KAAK,CACTgB,MADI,CACG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,eACED,IAAI,IACJA,IAAI,CAACE,GADL,IAEAF,IAAI,CAACG,SAAL,KAAmB,OAHrB;AAKD,OAPI,EAQJC,GARI,CAQA,CAACJ,IAAD,EAAOC,KAAP,KAAiB;AACpB,eACE,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAED,IAAI,CAACK,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAZI,CAAP;AAaD;AACF,GAhBD;;AAkBA,SAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBP,WAAW,EAAnC,CAAP;AACD,CAtDD;;AAwDA,eAAejB,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { debounce } from \"lodash\";\nimport \"./Feed.scss\";\nimport RedditPost from '../RedditPost/index'\n\nconst Feed = ({ getPosts = () => {} }) => {\n  const [posts, setPosts] = useState([]);\n  const handleScroll = debounce(() => {\n    if (\n      window.innerHeight + window.scrollY >=\n      document.body.offsetHeight - 100\n    ) {\n      loadPosts(10);\n    }\n  }, 100);\n\n  //EVENT LISTENERS\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll]);\n\n  //INTIAL POST LOADING\n  useEffect(() => {\n    const loadInitialPosts = async () => {\n      const newPosts = await getPosts(10);\n      setPosts(newPosts);\n    };\n\n    loadInitialPosts(10);\n  }, [getPosts]);\n\n\n  const loadPosts = async (n) => {\n    const newPosts = await getPosts(n);\n    setPosts([...posts, ...newPosts]);\n  };\n\n  const renderPosts = () => {\n    if (posts) {\n      return posts\n        .filter((post, index) => {\n          return (\n            post &&\n            post.url &&\n            post.post_hint === \"image\"\n          );\n        })\n        .map((post, index) => {\n          return (\n            <RedditPost src={post.src}/>\n          );\n        });\n    }\n  };\n\n  return <div className=\"posts\">{renderPosts()}</div>;\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}