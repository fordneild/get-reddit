{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Feed/FeedController.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Feed from \"./index\";\nimport fetchData from \"../../Services/useFetch\";\n\nconst FeedController = () => {\n  //keep track of all posts we want to show to the user\n  const [posts, setPosts] = useState([]);\n\n  const addPosts = newPosts => {\n    setPosts(prevPosts => [...prevPosts, ...newPosts]);\n  }; //on load, set posts\n\n\n  useEffect(() => {\n    const defaultSubs = [\"memes\", \"funny\", \"AdviceAnimals\", \"MemeEconomy\", \"ComedyCemetery\", \"dankmemes\", \"ProgrammerHumor\", \"ImGoingToHellForThis\"];\n    const defaultInstgramSearches = [\"cat\", \"dog\"];\n\n    const loadSubredditPosts = async subs => {\n      const redditPosts = await Promise.all(subs.map(async sub => {\n        return await fetchSubPosts(sub);\n      }));\n      const flatPosts = [].concat(...redditPosts);\n      shuffleArray(flatPosts);\n      addPosts(flatPosts);\n    };\n\n    const loadInstagramMemes = async term => {\n      const instas = await Promise.all(term.map(async sub => {\n        return await fetchInstagramPosts(term);\n      }));\n      let cleanedInstas = [].concat(...instas).map(post => {\n        return {\n          title: null,\n          url: post\n        };\n      });\n      console.log(cleanedInstas);\n      addPosts(cleanedInstas);\n    };\n\n    loadInstagramMemes(defaultInstgramSearches); //loadSubredditPosts(defaultSubs)\n  }, []);\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const fetchInstagramPosts = async term => {\n    const page = await fetchData(`https://www.instagram.com/explore/tags/${term}/?__a=1`);\n\n    try {\n      return page.graphql.hashtag.edge_hashtag_to_media.edges.map(post => post.node.display_url);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const fetchSubPosts = async subName => {\n    const sub = await fetchData(`https://www.reddit.com/r/${subName}/.json?`);\n    return sub.data.children.map(child => child.data).filter(post => {\n      return post && post.url && post.post_hint === \"image\";\n    });\n  };\n\n  const getPosts = n => {\n    const toReturn = posts.slice(0, n);\n    setPosts(prevPosts => {\n      prevPosts.splice(0, n);\n      return prevPosts;\n    });\n    return toReturn;\n  };\n\n  return React.createElement(Feed, {\n    getPosts: getPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  });\n};\n\nexport default FeedController;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Feed/FeedController.js"],"names":["React","useState","useEffect","Feed","fetchData","FeedController","posts","setPosts","addPosts","newPosts","prevPosts","defaultSubs","defaultInstgramSearches","loadSubredditPosts","subs","redditPosts","Promise","all","map","sub","fetchSubPosts","flatPosts","concat","shuffleArray","loadInstagramMemes","term","instas","fetchInstagramPosts","cleanedInstas","post","title","url","console","log","array","i","length","j","Math","floor","random","temp","page","graphql","hashtag","edge_hashtag_to_media","edges","node","display_url","e","subName","data","children","child","filter","post_hint","getPosts","n","toReturn","slice","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Feed from \"./index\";\nimport fetchData from \"../../Services/useFetch\";\n\nconst FeedController = () => {\n  //keep track of all posts we want to show to the user\n  const [posts, setPosts] = useState([]);\n\n  const addPosts = newPosts => {\n    setPosts(prevPosts => [...prevPosts, ...newPosts]);\n  };\n\n  //on load, set posts\n  useEffect(() => {\n    const defaultSubs = [\n      \"memes\",\n      \"funny\",\n      \"AdviceAnimals\",\n      \"MemeEconomy\",\n      \"ComedyCemetery\",\n      \"dankmemes\",\n      \"ProgrammerHumor\",\n      \"ImGoingToHellForThis\"\n    ];\n    const defaultInstgramSearches = [\"cat\",\"dog\"];\n    const loadSubredditPosts = async subs => {\n      const redditPosts = await Promise.all(\n        subs.map(async sub => {\n          return await fetchSubPosts(sub);\n        })\n      );\n      const flatPosts = [].concat(...redditPosts);\n      shuffleArray(flatPosts);\n      addPosts(flatPosts);\n    };\n    const loadInstagramMemes = async term => {\n      const instas = await Promise.all(\n        term.map(async sub => {\n          return await fetchInstagramPosts(term);\n        })\n      );\n\n      let cleanedInstas = [].concat(...instas).map(post => {\n        return {\n          title: null,\n          url: post\n        };\n      });\n      console.log(cleanedInstas);\n      addPosts(cleanedInstas);\n    };\n\n    loadInstagramMemes(defaultInstgramSearches);\n    //loadSubredditPosts(defaultSubs)\n  }, []);\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const fetchInstagramPosts = async term => {\n    const page = await fetchData(\n      `https://www.instagram.com/explore/tags/${term}/?__a=1`\n    );\n    try {\n      return page.graphql.hashtag.edge_hashtag_to_media.edges.map(\n        post => post.node.display_url\n      );\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const fetchSubPosts = async subName => {\n    const sub = await fetchData(`https://www.reddit.com/r/${subName}/.json?`);\n    return sub.data.children\n      .map(child => child.data)\n      .filter(post => {\n        return post && post.url && post.post_hint === \"image\";\n      });\n  };\n\n  const getPosts = n => {\n    const toReturn = posts.slice(0, n);\n    setPosts(prevPosts => {\n      prevPosts.splice(0, n);\n      return prevPosts;\n    });\n    return toReturn;\n  };\n\n  return <Feed getPosts={getPosts} />;\n};\n\nexport default FeedController;\n"]},"metadata":{},"sourceType":"module"}