{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Feed/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { debounce } from 'lodash';\nimport \"./Feed.scss\";\n\nconst Feed = ({\n  getPosts = () => {}\n}) => {\n  const [posts, setPosts] = useState([]); //   const handleScroll = debounce(() => {\n  //     if \n  //       (window.innerHeight + window.scrollY >= document.body.offsetHeight)\n  //        {\n  //         loadPosts(10)\n  //       }\n  // },100)\n  // //EVENT LISTENERS\n  // useEffect(() => {\n  //   window.addEventListener(onscroll,handleScroll)\n  //   return () => {\n  //     window.removeEventListener(onscroll,handleScroll)\n  //   }\n  // })\n  //INTIAL POST LOADING\n\n  useEffect(() => {\n    const loadInitialPosts = async n => {\n      console.log(\"loading posts\");\n      const newPosts = await getPosts(10);\n      setPosts(newPosts);\n    };\n\n    console.log(\"called\");\n    loadInitialPosts(10);\n  }, [getPosts]);\n\n  const loadPosts = async n => {\n    console.log(\"loading posts\");\n    const newPosts = await getPosts(10);\n    setPosts([...posts, ...newPosts]);\n  };\n\n  const renderPosts = () => {\n    if (posts) {\n      return posts.filter((post, index) => {\n        return post && post.data && post.data.url && post.data.post_hint === \"image\";\n      }).map((post, index) => {\n        console.log(post);\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: post.data.url,\n          onError: e => {\n            e.target.onerror = null;\n            e.target.parentNode.removeChild(e.target);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, renderPosts());\n};\n\nexport default Feed;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Feed/index.js"],"names":["React","useEffect","useState","debounce","Feed","getPosts","posts","setPosts","loadInitialPosts","n","console","log","newPosts","loadPosts","renderPosts","filter","post","index","data","url","post_hint","map","e","target","onerror","parentNode","removeChild"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAQ,GAAG,MAAM,CAAE;AAArB,CAAD,KAA6B;AAExC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAFwC,CAM1C;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,YAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAAC,EAAD,CAA/B;AACAE,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,KAJD;;AAKAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAH,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GARQ,EAQN,CAACH,QAAD,CARM,CAAT;;AAUA,QAAMQ,SAAS,GAAG,MAAOJ,CAAP,IAAa;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAAC,EAAD,CAA/B;AACAE,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU,GAAGM,QAAb,CAAD,CAAR;AACD,GAJD;;AAcA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAIR,KAAJ,EAAW;AACT,aAAOA,KAAK,CACTS,MADI,CACG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,eACED,IAAI,IACJA,IAAI,CAACE,IADL,IAEAF,IAAI,CAACE,IAAL,CAAUC,GAFV,IAGAH,IAAI,CAACE,IAAL,CAAUE,SAAV,KAAwB,OAJ1B;AAMD,OARI,EASJC,GATI,CASA,CAACL,IAAD,EAAOC,KAAP,KAAiB;AACpBP,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,eACE;AAAK,UAAA,GAAG,EAAEC,KAAV;AAAiB,UAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAUC,GADjB;AAEE,UAAA,OAAO,EAAEG,CAAC,IAAI;AACZA,YAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmB,IAAnB;AACAF,YAAAA,CAAC,CAACC,MAAF,CAASE,UAAT,CAAoBC,WAApB,CAAgCJ,CAAC,CAACC,MAAlC;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAWD,OAtBI,CAAP;AAuBD;AACF,GA1BD;;AA4BA,SAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBT,WAAW,EAAnC,CAAP;AACD,CA5ED;;AA8EA,eAAeV,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {debounce} from 'lodash'\nimport \"./Feed.scss\";\n\nconst Feed = ({ getPosts = () => {} }) => {\n\n  const [posts, setPosts] = useState([])\n\n  \n\n//   const handleScroll = debounce(() => {\n//     if \n//       (window.innerHeight + window.scrollY >= document.body.offsetHeight)\n//        {\n//         loadPosts(10)\n//       }\n// },100)\n\n  // //EVENT LISTENERS\n  // useEffect(() => {\n  //   window.addEventListener(onscroll,handleScroll)\n  //   return () => {\n  //     window.removeEventListener(onscroll,handleScroll)\n  //   }\n  // })\n\n  //INTIAL POST LOADING\n  useEffect(() => {\n    const loadInitialPosts = async (n) => {\n      console.log(\"loading posts\")\n      const newPosts = await getPosts(10)\n      setPosts(newPosts)\n    }\n    console.log(\"called\")\n    loadInitialPosts(10)\n  }, [getPosts])\n\n  const loadPosts = async (n) => {\n    console.log(\"loading posts\")\n    const newPosts = await getPosts(10)\n    setPosts([...posts,...newPosts])\n  }\n\n  \n\n  \n\n  \n\n  \n\n  const renderPosts = () => {\n    if (posts) {\n      return posts\n        .filter((post, index) => {\n          return (\n            post &&\n            post.data &&\n            post.data.url &&\n            post.data.post_hint === \"image\"\n          );\n        })\n        .map((post, index) => {\n          console.log(post);\n          return (\n            <div key={index} className=\"post\">\n              <img\n                src={post.data.url}\n                onError={e => {\n                  e.target.onerror = null;\n                  e.target.parentNode.removeChild(e.target);\n                }}\n              />\n            </div>\n          );\n        });\n    }\n  };\n\n  return <div className=\"posts\">{renderPosts()}</div>;\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}