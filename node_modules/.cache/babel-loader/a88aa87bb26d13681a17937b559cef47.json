{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Form/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport LocalStorage from '../../Services/LocalStorage';\nimport './Form.scss';\n\nconst Form = ({\n  LSKey,\n  title,\n  refresh,\n  defaults\n}) => {\n  const [entries, setEntires] = useState({});\n  const [formData, setFormData] = useState(\"\");\n  useEffect(() => {\n    const loadEntires = async () => {\n      const LSEntries = await LocalStorage.get(LSKey);\n\n      if (LSEntries !== undefined) {\n        setEntires(LSEntries);\n      } else {\n        setEntires(defaults);\n      }\n    };\n\n    loadEntires();\n  }, [LSKey, defaults]);\n  useEffect(() => {\n    return () => {//clean up\n    };\n  }, []);\n\n  const handleChange = e => {\n    setFormData(e.target.value);\n  };\n\n  const appendEntry = async entry => {\n    await LocalStorage.set(LSKey, [entry, ...entries]);\n    refresh(LSKey);\n  };\n\n  const removeEntry = async entryToRemove => {\n    console.log(\"LSKey in remove\", LSKey);\n    await LocalStorage.set(LSKey, entries.slice(0).filter(entry => entry !== entryToRemove));\n    refresh(LSKey);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    appendEntry(formData);\n    setFormData(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, title, \" name: \", React.createElement(\"input\", {\n    placeholder: \"ProgrammerHumor, memes, EarthPorn\",\n    name: \"sub\",\n    type: \"text\",\n    value: formData,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), entries && entries.length > 0 && React.createElement(\"ul\", {\n    className: \"entires\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, entries.map((entry, index) => {\n    return React.createElement(\"li\", {\n      key: index,\n      onClick: () => {\n        removeEntry(entry);\n      },\n      className: \"entry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, entry);\n  })));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Form/index.js"],"names":["React","useState","useEffect","LocalStorage","Form","LSKey","title","refresh","defaults","entries","setEntires","formData","setFormData","loadEntires","LSEntries","get","undefined","handleChange","e","target","value","appendEntry","entry","set","removeEntry","entryToRemove","console","log","slice","filter","handleSubmit","preventDefault","length","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAAD,KAAsC;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,WAAW,GAAG,YAAY;AAC5B,YAAMC,SAAS,GAAG,MAAMX,YAAY,CAACY,GAAb,CAAiBV,KAAjB,CAAxB;;AACA,UAAGS,SAAS,KAAKE,SAAjB,EAA2B;AACvBN,QAAAA,UAAU,CAACI,SAAD,CAAV;AACH,OAFD,MAEK;AACDJ,QAAAA,UAAU,CAACF,QAAD,CAAV;AACH;AACJ,KAPD;;AAQAK,IAAAA,WAAW;AAEZ,GAXM,EAWJ,CAACR,KAAD,EAAQG,QAAR,CAXI,CAAT;AAaAN,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM,CACT;AACH,KAFD;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AACxBN,IAAAA,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACjC,UAAMnB,YAAY,CAACoB,GAAb,CAAiBlB,KAAjB,EAAwB,CAACiB,KAAD,EAAQ,GAAGb,OAAX,CAAxB,CAAN;AACAF,IAAAA,OAAO,CAACF,KAAD,CAAP;AACH,GAHD;;AAKA,QAAMmB,WAAW,GAAG,MAAOC,aAAP,IAAyB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BtB,KAA9B;AACA,UAAMF,YAAY,CAACoB,GAAb,CAAiBlB,KAAjB,EAAwBI,OAAO,CAACmB,KAAR,CAAc,CAAd,EAAiBC,MAAjB,CAAwBP,KAAK,IAAIA,KAAK,KAAGG,aAAzC,CAAxB,CAAN;AACAlB,IAAAA,OAAO,CAACF,KAAD,CAAP;AACH,GAJD;;AAMA,QAAMyB,YAAY,GAAIZ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACa,cAAF;AACAV,IAAAA,WAAW,CAACV,QAAD,CAAX;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAJD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEkB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQxB,KAAR,aAAqB;AAAO,IAAA,WAAW,EAAC,mCAAnB;AAAuD,IAAA,IAAI,EAAC,KAA5D;AAAkE,IAAA,IAAI,EAAC,MAAvE;AAA8E,IAAA,KAAK,EAAEK,QAArF;AAA+F,IAAA,QAAQ,EAAEM,YAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CADJ,CADJ,EAIKR,OAAO,IAAIA,OAAO,CAACuB,MAAR,GAAe,CAA1B,IAA+B;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3BvB,OAAO,CAACwB,GAAR,CAAY,CAACX,KAAD,EAAQY,KAAR,KAAkB;AAC3B,WAAO;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,OAAO,EAAE,MAAM;AAACV,QAAAA,WAAW,CAACF,KAAD,CAAX;AAAmB,OAAnD;AAAoD,MAAA,SAAS,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuEA,KAAvE,CAAP;AACH,GAFA,CAD2B,CAJpC,CADJ;AAYH,CAzDD;;AA2DA,eAAelB,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport LocalStorage from '../../Services/LocalStorage'\nimport './Form.scss'\n\nconst Form = ({LSKey,title, refresh, defaults}) => {\n    const [entries, setEntires] = useState({})\n    const [formData, setFormData] = useState(\"\")\n\n    useEffect(() => {\n        const loadEntires = async () => {\n            const LSEntries = await LocalStorage.get(LSKey);\n            if(LSEntries !== undefined){\n                setEntires(LSEntries)\n            }else{\n                setEntires(defaults)\n            }\n        }\n        loadEntires()\n        \n      }, [LSKey, defaults]);\n\n    useEffect(() => {\n        return () => {\n            //clean up\n        }\n    },[])\n\n    const handleChange = (e) => {\n        setFormData(e.target.value)\n    }\n\n    const appendEntry = async (entry) => {\n        await LocalStorage.set(LSKey, [entry, ...entries])\n        refresh(LSKey)\n    }\n\n    const removeEntry = async (entryToRemove) => {\n        console.log(\"LSKey in remove\",LSKey)\n        await LocalStorage.set(LSKey, entries.slice(0).filter(entry => entry!==entryToRemove))\n        refresh(LSKey)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        appendEntry(formData)\n        setFormData(\"\")\n    }\n\n\n    return(\n        <div className=\"form--container\">\n            <form onSubmit={handleSubmit}>\n                <label>{title} name: <input placeholder=\"ProgrammerHumor, memes, EarthPorn\" name=\"sub\" type=\"text\" value={formData} onChange={handleChange}/></label>\n            </form>\n            {entries && entries.length>0 && <ul className=\"entires\">\n                {entries.map((entry, index) => {\n                    return <li key={index} onClick={() => {removeEntry(entry)}}className=\"entry\">{entry}</li>\n                })}\n            </ul>}\n        </div>\n    )\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}