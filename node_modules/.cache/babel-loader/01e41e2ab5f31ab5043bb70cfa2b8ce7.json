{"ast":null,"code":"var _jsxFileName = \"/Users/fordneild/workdir/get-reddit/src/Components/Feed/FeedController.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Feed from \"./FeedView.js\";\nimport LocalStorage from \"../../Services/LocalStorage\";\nimport redditFetch from \"../../Services/redditFetch\";\nimport instagramFetch from \"../../Services/instagramFetch\";\nimport defaultInstagram from \"../../assets/defaultInstagram\";\n\nconst FeedController = () => {\n  //keep track of all posts we want to show to the user eventually\n  const [posts, setPosts] = useState([]); //on mount, load urls of images\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      const {\n        terms,\n        accounts\n      } = defaultInstagram;\n\n      const loadReddit = async () => {\n        const redditPosts = await redditFetch();\n        addPosts(redditPosts);\n      };\n\n      loadReddit();\n    };\n\n    loadPosts();\n  }, []);\n\n  const addPosts = newPosts => {\n    setPosts(prevPosts => {\n      const posts = [...prevPosts, ...newPosts];\n\n      for (var i = posts.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = posts[i];\n        posts[i] = posts[j];\n        posts[j] = temp;\n      }\n\n      return posts;\n    });\n  };\n\n  const getPosts = n => {\n    const toReturn = posts.slice(0, n);\n    setPosts(prevPosts => {\n      prevPosts.splice(0, n);\n      return prevPosts;\n    });\n    return toReturn;\n  };\n\n  return React.createElement(Feed, {\n    getPosts: getPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n};\n\nexport default FeedController;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Components/Feed/FeedController.js"],"names":["React","useState","useEffect","Feed","LocalStorage","redditFetch","instagramFetch","defaultInstagram","FeedController","posts","setPosts","loadPosts","terms","accounts","loadReddit","redditPosts","addPosts","newPosts","prevPosts","i","length","j","Math","floor","random","temp","getPosts","n","toReturn","slice","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAC3B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAF2B,CAI3B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAoBN,gBAA1B;;AACA,YAAMO,UAAU,GAAG,YAAY;AAC7B,cAAMC,WAAW,GAAG,MAAMV,WAAW,EAArC;AACAW,QAAAA,QAAQ,CAACD,WAAD,CAAR;AACD,OAHD;;AAIAD,MAAAA,UAAU;AACX,KAPD;;AAQAH,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMK,QAAQ,GAAGC,QAAQ,IAAI;AAC3BP,IAAAA,QAAQ,CAACQ,SAAS,IAAI;AACpB,YAAMT,KAAK,GAAG,CAAC,GAAGS,SAAJ,EAAe,GAAGD,QAAlB,CAAd;;AACA,WAAK,IAAIE,CAAC,GAAGV,KAAK,CAACW,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,YAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,YAAIM,IAAI,GAAGhB,KAAK,CAACU,CAAD,CAAhB;AACAV,QAAAA,KAAK,CAACU,CAAD,CAAL,GAAWV,KAAK,CAACY,CAAD,CAAhB;AACAZ,QAAAA,KAAK,CAACY,CAAD,CAAL,GAAWI,IAAX;AACD;;AACD,aAAOhB,KAAP;AACD,KATO,CAAR;AAUD,GAXD;;AAaA,QAAMiB,QAAQ,GAAGC,CAAC,IAAI;AACpB,UAAMC,QAAQ,GAAGnB,KAAK,CAACoB,KAAN,CAAY,CAAZ,EAAeF,CAAf,CAAjB;AACAjB,IAAAA,QAAQ,CAACQ,SAAS,IAAI;AACpBA,MAAAA,SAAS,CAACY,MAAV,CAAiB,CAAjB,EAAoBH,CAApB;AACA,aAAOT,SAAP;AACD,KAHO,CAAR;AAIA,WAAOU,QAAP;AACD,GAPD;;AASA,SAAO,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAxCD;;AA0CA,eAAelB,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Feed from \"./FeedView.js\";\nimport LocalStorage from \"../../Services/LocalStorage\"\nimport redditFetch from \"../../Services/redditFetch\"\nimport instagramFetch from \"../../Services/instagramFetch\"\nimport defaultInstagram from \"../../assets/defaultInstagram\"\n\n\nconst FeedController = () => {\n  //keep track of all posts we want to show to the user eventually\n  const [posts, setPosts] = useState([]);\n\n  //on mount, load urls of images\n  useEffect(() => {\n    const loadPosts = async () => {\n      const {terms, accounts} = defaultInstagram\n      const loadReddit = async () => {\n        const redditPosts = await redditFetch()\n        addPosts(redditPosts)\n      }\n      loadReddit()\n    }\n    loadPosts()\n  }, []);\n\n  const addPosts = newPosts => {\n    setPosts(prevPosts => {\n      const posts = [...prevPosts, ...newPosts];\n      for (var i = posts.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = posts[i];\n        posts[i] = posts[j];\n        posts[j] = temp;\n      }\n      return posts;\n    });\n  };\n\n  const getPosts = n => {\n    const toReturn = posts.slice(0, n);\n    setPosts(prevPosts => {\n      prevPosts.splice(0, n);\n      return prevPosts;\n    });\n    return toReturn;\n  };\n\n  return <Feed getPosts={getPosts} />;\n};\n\nexport default FeedController;\n"]},"metadata":{},"sourceType":"module"}