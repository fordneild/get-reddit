{"ast":null,"code":"import fetchData from \"./useFetch\";\n\nconst fetchSubPosts = async subName => {\n  const sub = await fetchData(`https://www.reddit.com/r/${subName}/.json?`);\n  return sub.data.children.map(child => child.data).filter(post => {\n    return post && post.url && post.post_hint === \"image\";\n  });\n};\n\nconst loadSubredditPosts = async subs => {\n  console.log(subs);\n  const redditPosts = await Promise.all(subs.map(async sub => {\n    return await fetchSubPosts(sub);\n  }));\n  const flatPosts = [].concat(...redditPosts).map(post => {\n    return {\n      url: post.url,\n      pipe: `r/${post.subreddit}`\n    };\n  });\n  return flatPosts;\n};\n\nexport default loadSubredditPosts;","map":{"version":3,"sources":["/Users/fordneild/workdir/get-reddit/src/Services/redditFetch.js"],"names":["fetchData","fetchSubPosts","subName","sub","data","children","map","child","filter","post","url","post_hint","loadSubredditPosts","subs","console","log","redditPosts","Promise","all","flatPosts","concat","pipe","subreddit"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAa,GAAG,MAAMC,OAAN,IAAiB;AACnC,QAAMC,GAAG,GAAG,MAAMH,SAAS,CAAE,4BAA2BE,OAAQ,SAArC,CAA3B;AACA,SAAOC,GAAG,CAACC,IAAJ,CAASC,QAAT,CACJC,GADI,CACAC,KAAK,IAAIA,KAAK,CAACH,IADf,EAEJI,MAFI,CAEGC,IAAI,IAAI;AACd,WAAOA,IAAI,IAAIA,IAAI,CAACC,GAAb,IAAoBD,IAAI,CAACE,SAAL,KAAmB,OAA9C;AACD,GAJI,CAAP;AAKD,CAPH;;AASA,MAAMC,kBAAkB,GAAG,MAAMC,IAAN,IAAc;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CACxBL,IAAI,CAACP,GAAL,CAAS,MAAMH,GAAN,IAAa;AACpB,WAAO,MAAMF,aAAa,CAACE,GAAD,CAA1B;AACD,GAFD,CADwB,CAA1B;AAKA,QAAMgB,SAAS,GAAG,GAAGC,MAAH,CAAU,GAAGJ,WAAb,EAA0BV,GAA1B,CAA8BG,IAAI,IAAI;AACtD,WAAO;AACLC,MAAAA,GAAG,EAAED,IAAI,CAACC,GADL;AAELW,MAAAA,IAAI,EAAG,KAAIZ,IAAI,CAACa,SAAU;AAFrB,KAAP;AAID,GALiB,CAAlB;AAMA,SAAOH,SAAP;AACD,CAdH;;AAgBA,eAAeP,kBAAf","sourcesContent":["import fetchData from \"./useFetch\";\n\nconst fetchSubPosts = async subName => {\n    const sub = await fetchData(`https://www.reddit.com/r/${subName}/.json?`);\n    return sub.data.children\n      .map(child => child.data)\n      .filter(post => {\n        return post && post.url && post.post_hint === \"image\";\n      });\n  };\n\nconst loadSubredditPosts = async subs => {\n    console.log(subs)\n    const redditPosts = await Promise.all(\n      subs.map(async sub => {\n        return await fetchSubPosts(sub);\n      })\n    );\n    const flatPosts = [].concat(...redditPosts).map(post => {\n      return {\n        url: post.url,\n        pipe: `r/${post.subreddit}`\n      };\n    });\n    return flatPosts\n  };\n\nexport default loadSubredditPosts\n"]},"metadata":{},"sourceType":"module"}